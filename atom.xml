<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>陈新友的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.xinyouwx.club/"/>
  <updated>2018-07-18T10:11:12.081Z</updated>
  <id>https://www.xinyouwx.club/</id>
  
  <author>
    <name>陈新友</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ubuntu 安装redis集群</title>
    <link href="https://www.xinyouwx.club/2018/07/18/Ubuntu-%E5%AE%89%E8%A3%85redis%E9%9B%86%E7%BE%A4/"/>
    <id>https://www.xinyouwx.club/2018/07/18/Ubuntu-安装redis集群/</id>
    <published>2018-07-18T10:00:24.000Z</published>
    <updated>2018-07-18T10:11:12.081Z</updated>
    
    <content type="html"><![CDATA[<p>1.先安装 Redis，保证Redis能在单节点运行</p><pre><code>sudo wget http://download.redis.io/releases/redis-3.2.6.tar.gz</code></pre><p>2.解压文件</p><pre><code>sudo tar -zxvf redis-3.2.6.tar.gz</code></pre><p>我把redis-3.2.6/ 移动到了/usr/local/目录下</p><p>3.安装gcc</p><pre><code>apt-get install gcc sudo apt-get install build-essential</code></pre><p>4.进入到redis-3.2.6目录下，依次执行下面两条命令：</p><pre><code>sudo makesudo make install</code></pre><p>会在redis-3.2.6目录下，生成src文件 ，会生成redis-server等运行命令</p><p>5.更改redis.conf文件</p><p>该文件在redis-3.2.6文件目录下 将“daemonize no”修改为“daemonize yes” 更改bind 127.0.0.1 改为自己局域网IP（可以不改）</p><pre><code>cd /usr/local/redis-3.2.6/src/redis-server redis.conf </code></pre><p>启动成功<br>输入： </p><pre><code>redis-cli -p 6379  </code></pre><p>然后执行命令ping 输入pong，则证明服务启动成功<br>执行命令，</p><pre><code>set key hellowordget key </code></pre><p>6.搭建集群</p><p>准备三台机器，36，38，39<br>首先在/usr/local/目录下 新建redis-cluster目录，然后cd redis-cluster<br>新建7000,7001目录 复制redis-server文件分别到7000,7001目录中并新建redis.conf 文件，添加如下内容到redis.conf</p><pre><code>port 7000 #端口 和目录一样cluster-enabled yes cluster-config-file nodes.confbind 192.168.244.38 #绑定IP地址，如果不添加，添加集群的时候会报错，cluster-node-timeout 5000daemonize yes    # 后台运行appendonly yes</code></pre><p>另外两台机器一样配置，注意IP地址的更改<br>在所有集群都配置完以后，依次运行一下命令</p><pre><code>#!/bin/bashpkill -9 redis;cd /usr/local/redis-cluster/7000//usr/local/redis-cluster/7000/redis-server /usr/local/redis-cluster/7000/redis.conf;cd /usr/local/redis-cluster/7001//usr/local/redis-cluster/7001/redis-server /usr/local/redis-cluster/7001/redis.conf;</code></pre><p>所有机器启动完成以后，找一台机器，安装ruby</p><pre><code>sudo apt-get updatesudo apt-get install rubysudo gem install redis</code></pre><p>安装完成以后进入 redis-3.2.6/src/文件目录下，运行一下文件</p><pre><code>./redis-trib.rb create --replicas 1 192.168.244.36:7000 192.168.244.38:7000 192.168.244.39:7000 192.168.244.36:7001 192.168.244.38:7001 192.168.244.39:7001</code></pre><p>成功以后会出现一下信息：</p><pre><code>&gt;&gt;&gt; Creating cluster&gt;&gt;&gt; Performing hash slots allocation on 6 nodes...Using 3 masters:192.168.244.36:7000192.168.244.38:7000192.168.244.39:7000Adding replica 192.168.244.38:7001 to 192.168.244.36:7000Adding replica 192.168.244.36:7001 to 192.168.244.38:7000Adding replica 192.168.244.39:7001 to 192.168.244.39:7000M: 0ee8340c886afde83aa209d36d02cc7d9c4ff465 192.168.244.36:7000slots:0-5460 (5461 slots) masterM: c0823aefa158d8af30ac1c58c3753be5db7d69bd 192.168.244.38:7000slots:5461-10922 (5462 slots) masterM: 4f4bb2f4f67f4a292bf2c5ec7445f0460e0a4249 192.168.244.39:7000slots:10923-16383 (5461 slots) masterS: e371a20971b26f92af75448e08fdce4d22bcd40c 192.168.244.36:7001replicates c0823aefa158d8af30ac1c58c3753be5db7d69bdS: a3c4e314d3b5996fa79d17f60bec0d8debf3bfa4 192.168.244.38:7001replicates 0ee8340c886afde83aa209d36d02cc7d9c4ff465S: be8743b28ae71f7708f8d5ef40bc6469687e7300 192.168.244.39:7001replicates 4f4bb2f4f67f4a292bf2c5ec7445f0460e0a4249Can I set the above configuration? (type &apos;yes&apos; to accept): yes</code></pre><p>输入yes以后出现以下信息：</p><pre><code>&gt;&gt;&gt; Nodes configuration updated&gt;&gt;&gt; Assign a different config epoch to each node&gt;&gt;&gt; Sending CLUSTER MEET messages to join the clusterWaiting for the cluster to join...&gt;&gt;&gt; Performing Cluster Check (using node 192.168.244.36:7000)M: 0ee8340c886afde83aa209d36d02cc7d9c4ff465 192.168.244.36:7000slots:0-5460 (5461 slots) master1 additional replica(s)S: e371a20971b26f92af75448e08fdce4d22bcd40c 192.168.244.36:7001slots: (0 slots) slavereplicates c0823aefa158d8af30ac1c58c3753be5db7d69bdM: c0823aefa158d8af30ac1c58c3753be5db7d69bd 192.168.244.38:7000slots:5461-10922 (5462 slots) master1 additional replica(s)S: be8743b28ae71f7708f8d5ef40bc6469687e7300 192.168.244.39:7001slots: (0 slots) slavereplicates 4f4bb2f4f67f4a292bf2c5ec7445f0460e0a4249S: a3c4e314d3b5996fa79d17f60bec0d8debf3bfa4 192.168.244.38:7001slots: (0 slots) slavereplicates 0ee8340c886afde83aa209d36d02cc7d9c4ff465M: 4f4bb2f4f67f4a292bf2c5ec7445f0460e0a4249 192.168.244.39:7000slots:10923-16383 (5461 slots) master1 additional replica(s)[OK] All nodes agree about slots configuration.&gt;&gt;&gt; Check for open slots...&gt;&gt;&gt; Check slots coverage...[OK] All 16384 slots covered.</code></pre><p>集群安装成功，检查集群健康命令：</p><pre><code>./redis-trib.rb check 192.168.244.36:7000</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.先安装 Redis，保证Redis能在单节点运行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo wget http://download.redis.io/releases/redis-3.2.6.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2.解压文件&lt;/p&gt;
&lt;pre&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ubuntu 更改IP不生效问题</title>
    <link href="https://www.xinyouwx.club/2018/07/18/Ubuntu-%E6%9B%B4%E6%94%B9IP%E4%B8%8D%E7%94%9F%E6%95%88%E9%97%AE%E9%A2%98/"/>
    <id>https://www.xinyouwx.club/2018/07/18/Ubuntu-更改IP不生效问题/</id>
    <published>2018-07-18T02:52:24.000Z</published>
    <updated>2018-07-18T02:59:37.704Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu 修改IP地址不生效<br>1、Ubuntu修改静态IP不生效</p><pre><code>source /etc/network/interfaces.d/*# The loopback network interfaceauto loiface lo inet loopback# The primary network interfaceauto ens33iface ens33 inet staticaddress 192.168.244.36netmask 255.255.0.0gateway 192.168.0.1</code></pre><p> service networking restart 和ifdown ens33 都不生效，ifconfig 结果还是原来的地址解决方案：</p><pre><code>ip addr flush dev ens33ifdown ens33ifup ens33</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Ubuntu 修改IP地址不生效&lt;br&gt;1、Ubuntu修改静态IP不生效&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;source /etc/network/interfaces.d/*
# The loopback network interface
auto lo
iface lo
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ubuntu 换源</title>
    <link href="https://www.xinyouwx.club/2018/07/18/Ubuntu-%E6%8D%A2%E6%BA%90/"/>
    <id>https://www.xinyouwx.club/2018/07/18/Ubuntu-换源/</id>
    <published>2018-07-18T02:04:31.000Z</published>
    <updated>2018-07-18T02:15:43.678Z</updated>
    
    <content type="html"><![CDATA[<p>1.备份原source.list</p><p>2.替换为一下内容</p><pre><code>deb http://cn.archive.ubuntu.com/ubuntu/ xenial main restricted universe multiverse      deb http://cn.archive.ubuntu.com/ubuntu/ xenial-security main restricted universe multiversedeb http://cn.archive.ubuntu.com/ubuntu/ xenial-updates main restricted universe multiversedeb http://cn.archive.ubuntu.com/ubuntu/ xenial-backports main restricted universe multiverse</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.备份原source.list&lt;/p&gt;
&lt;p&gt;2.替换为一下内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb http://cn.archive.ubuntu.com/ubuntu/ xenial main restricted universe multiverse     
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ubuntu 16.04设置IP、网关、DNS</title>
    <link href="https://www.xinyouwx.club/2018/07/18/Ta/"/>
    <id>https://www.xinyouwx.club/2018/07/18/Ta/</id>
    <published>2018-07-18T01:15:00.000Z</published>
    <updated>2018-07-18T01:32:42.957Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu 16.04设置IP、网关、DNS<br>1、修改IP地址</p><p>打开/etc/network/interfaces</p><pre><code>sudo vim /etc/network/interfaces</code></pre><p>加入以下语句：</p><pre><code>auto eth0 #要设置的网卡iface eth0 inet static #设置静态IP；如果是使用自动IP用dhcp，后面的不用设置，一般少用address 192.168.244.35#IP地址netmask 255.255.0.0 #子网掩码gateway 192.168.0.1 #网关</code></pre><p>2、修改DNS</p><p>打开/etc/resolv.conf</p><pre><code>sudo vim /etc/resolv.conf</code></pre><p>注意：上面设置的文件重启后会覆盖，如果要持久的保存，需要修改：/etc/resolvconf/resolv.conf.d/base</p><p>改为如下内容：</p><pre><code>search localdomain #如果本Server为DNS服务器，可以加上这一句，如果不是，可以不加nameserver 172.16.3.4 #希望修改成的DNSnameserver 172.16.3.3 #希望修改成的DNS</code></pre><p>3、重启服务生效</p><p>先运行一次，然后在rc.local里加入这个重启网络配置的命令：</p><pre><code>sudo /etc/init.d/networking restart #使网卡配置生效sudo /etc/init.d/resolvconf restart #使DNS生效service networking restart</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Ubuntu 16.04设置IP、网关、DNS&lt;br&gt;1、修改IP地址&lt;/p&gt;
&lt;p&gt;打开/etc/network/interfaces&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo vim /etc/network/interfaces
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;加入以下
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ubuntu安装FastDFS 5.05</title>
    <link href="https://www.xinyouwx.club/2018/06/28/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://www.xinyouwx.club/2018/06/28/个人博客/</id>
    <published>2018-06-28T02:04:00.000Z</published>
    <updated>2018-06-29T07:55:40.108Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu下部署FastDFS 5.05</p><ol><li><p>下载安装libfastcommon</p><pre><code>git clone https://github.com/happyfish100/libfastcommon.gitcd libfastcommon/./make.sh./make.sh install</code></pre><p>确认make没有错误后，执行安装，64位系统默认会复制到/usr/lib64下。这时候需要设置环境变量或者创建软链接</p><pre><code>export LD_LIBRARY_PATH=/usr/lib64/ln -s /usr/lib64/libfastcommon.so /usr/local/lib/libfastcommon.so</code></pre></li><li><p>下载安装fastdfs</p><pre><code>tar xzf FastDFS.tar.gzcd FastDFS/./make.sh./make.sh install</code></pre><p>  确认make没有错误后，执行安装，默认会安装到/usr/bin中，并在/etc/fdfs中添加三个配置文件。</p></li><li><p>修改配置文件<br> 文件要自己创建<br> 首先将三个文件的名字去掉sample，暂时只修改以下几点，先让fastdfs跑起来，其余参数调优的时候再考虑。</p><p> tracker.conf 中修改</p><pre><code>base_path=/usr/fastdfs #用于存放日志。</code></pre><p> storage.conf 中修改</p><pre><code>base_path=/usr/fastdfs-storaged #用于存放日志。store_path0=/usr/fastdfs0 #存放数据，若不设置默认为前面那个。tracker_server=192.168.128.128:22122 #指定tracker服务器地址。</code></pre><p> client.conf 中修改</p><pre><code>base_path=/usr/fastdfs #用于存放日志。tracker_server=192.168.128.128:22122 #指定tracker服务器地址。</code></pre></li><li><p>启动tracker和storage </p><pre><code>/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf/usr/bin/fdfs_storaged /etc/fdfs/storage.conf</code></pre></li><li><p>检查进程</p><pre><code>root@ubuntu:~# ps -ef |grep fdfsroot       7819      1  0 15:24 ?        00:00:00 /usr/bin/fdfs_trackerd /etc/fdfs/tracker.confroot       8046      1  0 15:36 ?        00:00:01 fdfs_storaged /etc/fdfs/storage.conf start</code></pre><p> 表示启动ok了，若有错误，可以在/usr/fastdfs目录下检查日志。</p></li><li><p>上传/删除测试</p></li></ol><p>使用自带的fdfs_test来测试，使用格式如下：</p><pre><code>root@ubuntu:~# fdfs_test /etc/fdfs/client.conf upload /home/steven/01.jpg     group_name=group1, ip_addr=192.168.29.132, port=23000 storage_upload_by_filename group_name=group1, remote_filename=M00/00/00/wKgdhFTV0ZmAP3AZAPk-Io7D4w8580.jpg example file url: http://192.168.29.132/group1/M00/00/00/wKgdhFTV0ZmAP3AZAPk-Io7D4w8580.jpg storage_upload_slave_by_filename group_name=group1, remote_filename=M00/00/00/wKgdhFTV0ZmAP3AZAPk-Io7D4w8580_big.jpg   example file url: http://192.168.29.132/group1/M00/00/00/wKgdhFTV0ZmAP3AZAPk-Io7D4w8580_big.jpg</code></pre><p>7、使用fdfs_delete_file来删除文件，格式如下：</p><pre><code>fdfs_delete_file /etc/fdfs/client.conf group1/M00/00/00/wKgdhFTV11uAXgKWAPk-Io7D4w8667.jpg</code></pre><p>   可以看到，上传ok了，这里会生成两个文件，这是fastdfs的主/从文件特性，以后再介绍。 example file url 是不能在浏览器中直接打开的，除非配合nginx使用，这里我不需要了。</p><pre><code>删除文件需要完整的group_name和remote_filename。</code></pre><p>8、建议的关闭防火墙命令</p><pre><code>iptables -P INPUT ACCEPT 　　iptables -P FORWARD ACCEPT 　　iptables -P OUTPUT ACCEPT 　　iptables -F </code></pre><p>9、安装nginx</p><p>   FastDFS的nginx插件fastdfs-nginx-module_v1.16.tar.gz</p><pre><code>tar zxvf fastdfs-nginx-module_v1.16.tar.gz </code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Ubuntu下部署FastDFS 5.05&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载安装libfastcommon&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/happyfish100/libfastcommon.git
cd lib
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.xinyouwx.club/2018/06/27/hello-world/"/>
    <id>https://www.xinyouwx.club/2018/06/27/hello-world/</id>
    <published>2018-06-27T09:38:39.938Z</published>
    <updated>2018-06-27T09:38:39.938Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
